<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.kr.lg.mapper.BoardCommentTbMapper">

    <select id="findAnonymousAllCommentBoard"  resultType="com.kr.lg.model.web.querydsl.BoardQ">
        SELECT A.*
        FROM (
                 SELECT
                     bc.boardCommentId,
                     bc.parentId,
                     bc.`order`,
                     bc.depth,
                     bc.writer,
                     bc.content,
                     bc.status,
                     bc.regDt,
                     0 AS 'created',
                     IF(bc.userId IS NULL, 1, 0) AS 'anonymous',
                     bc.ip,
                     IF(bc.userId IS NULL, NULL, (SELECT u.profile FROM UserTb u WHERE bc.userId = u.userId)) AS 'profile',
                     fnc.order_num
                 FROM (
                          SELECT fnc_hierarchi() AS id, @level AS level, @order_num:=@order_num+1 as 'order_num'
                          FROM (SELECT @start_with := #{rootId}, @id := @start_with, @level := 0,  @order_num := 0) vars
                                   JOIN BoardCommentTb
                          WHERE @id IS NOT NULL
                      ) fnc
                          JOIN BoardCommentTb bc ON fnc.id = bc.boardCommentId
             ) A
        WHERE (A.depth = 2 AND A.`status` = 1) OR
            (A.depth = 1 AND A.`status` = 1) OR
            (A.depth = 1 AND A.`status` = 2 AND EXISTS (
                    SELECT 1
                    FROM BoardCommentTb bc2
                    WHERE bc2.parentId = A.boardCommentId AND bc2.`status` = 1
                ))
        order by order_num asc
    </select>

    <select id="findUserAllCommentBoard"  resultType="com.kr.lg.model.web.querydsl.BoardQ">
        SELECT A.*
        FROM (
                 SELECT
                     bc.boardCommentId,
                     bc.parentId,
                     bc.`order`,
                     bc.depth,
                     bc.writer,
                     bc.content,
                     bc.status,
                     bc.regDt,
                     IF(bc.userId = #{userId}, 1, 0) as 'created',
                     IF(bc.userId IS NULL, 1, 0) AS 'anonymous',
                     bc.ip,
                     IF(bc.userId IS NULL, NULL, (SELECT u.profile FROM UserTb u WHERE bc.userId = u.userId)) AS 'profile',
                     fnc.order_num
                 FROM (
                          SELECT fnc_hierarchi() AS id, @level AS level, @order_num:=@order_num+1 as 'order_num'
                          FROM (SELECT @start_with := #{rootId}, @id := @start_with, @level := 0, @order_num := 0) vars
                                   JOIN BoardCommentTb
                          WHERE @id IS NOT NULL
                      ) fnc
                          JOIN BoardCommentTb bc ON fnc.id = bc.boardCommentId
             ) A
        WHERE (A.depth = 2 AND A.`status` = 1) OR
            (A.depth = 1 AND A.`status` = 1) OR
            (A.depth = 1 AND A.`status` = 2 AND EXISTS (
                    SELECT 1
                    FROM BoardCommentTb bc2
                    WHERE bc2.parentId = A.boardCommentId AND bc2.`status` = 1
                ))
        order by order_num asc
    </select>


    <!--

    DROP FUNCTION IF EXISTS fnc_hierarchi;

    DELIMITER $$

    CREATE FUNCTION  fnc_hierarchi() RETURNS INT

    NOT DETERMINISTIC

    READS SQL DATA

    BEGIN

        DECLARE v_id INT;
        DECLARE v_parent INT;
        DECLARE CONTINUE HANDLER FOR NOT FOUND SET @id = NULL;

        SET v_parent = @id;
        SET v_id = -1;

        IF @id IS NULL THEN
            RETURN NULL;
        END IF;

        LOOP

        SELECT MIN(boardCommentId)
          INTO @id
          FROM BoardCommentTb
         WHERE parentId = v_parent
           AND boardCommentId > v_id;

        IF (@id IS NOT NULL) OR (v_parent = @start_with) THEN
           SET @level = @level + 1;
        RETURN @id;
        END IF;

        SET @level := @level - 1;

        SELECT boardCommentId, parentId
          INTO v_id , v_parent
            FROM BoardCommentTb
           WHERE boardCommentId = v_parent;

        END LOOP;

    END

    $$

    DELIMITER ;


    -->

</mapper>
